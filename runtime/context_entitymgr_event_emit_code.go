// Code generated by eventcode --decl_file=context_entitymgr_event.go gen_emit --package=runtime; DO NOT EDIT.

package runtime

import (
	localevent "github.com/pangdogs/galaxy/localevent"
	"github.com/pangdogs/galaxy/ec"
	"github.com/pangdogs/galaxy/util"
)

func emitEventEntityMgrAddEntity(event localevent.IEvent, runtimeCtx Context, entity ec.Entity) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate util.IfaceCache) bool {
		util.Cache2Iface[EventEntityMgrAddEntity](delegate).OnEntityMgrAddEntity(runtimeCtx, entity)
		return true
	})
}

func emitEventEntityMgrRemoveEntity(event localevent.IEvent, runtimeCtx Context, entity ec.Entity) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate util.IfaceCache) bool {
		util.Cache2Iface[EventEntityMgrRemoveEntity](delegate).OnEntityMgrRemoveEntity(runtimeCtx, entity)
		return true
	})
}

func emitEventEntityMgrEntityAddComponents(event localevent.IEvent, runtimeCtx Context, entity ec.Entity, components []ec.Component) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate util.IfaceCache) bool {
		util.Cache2Iface[EventEntityMgrEntityAddComponents](delegate).OnEntityMgrEntityAddComponents(runtimeCtx, entity, components)
		return true
	})
}

func emitEventEntityMgrEntityRemoveComponent(event localevent.IEvent, runtimeCtx Context, entity ec.Entity, component ec.Component) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate util.IfaceCache) bool {
		util.Cache2Iface[EventEntityMgrEntityRemoveComponent](delegate).OnEntityMgrEntityRemoveComponent(runtimeCtx, entity, component)
		return true
	})
}

func emitEventEntityMgrNotifyECTreeRemoveEntity(event localevent.IEvent, runtimeCtx Context, entity ec.Entity) {
	if event == nil {
		panic("nil event")
	}
	event.Emit(func(delegate util.IfaceCache) bool {
		util.Cache2Iface[eventEntityMgrNotifyECTreeRemoveEntity](delegate).onEntityMgrNotifyECTreeRemoveEntity(runtimeCtx, entity)
		return true
	})
}
